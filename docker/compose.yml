name: tdk-communication

x-common-env: &common-env
  tty: true
  stdin_open: true
  stop_grace_period: 1s

services:
  ros-core:
    image: osrf/ros:noetic-desktop-full
    container_name: wu-ros-core
    command: "rosmaster --core"
    network_mode: host
    volumes:
      - ~/tdk_peace_and_joy/catkin_ws:/catkin_ws/
      - /dev/bus/usb:/dev/bus/usb
    working_dir: /catkin_ws
    stop_grace_period: 1s
    healthcheck:
      # The healthcheck is required for ros1-bridge to wait until roscore is ready.
      test: /ros_entrypoint.sh bash -c "rostopic list || exit 1"
      interval: 3s
      timeout: 10s
      retries: 5

  ros1-bridge:
    build:
      context: .
      target: release
    image: pomelo925/ttennis-humble:communication
    container_name: wu-ros2-ros1-bridge-ws
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=23
      #- ROS_MASTER_URI=http://192.168.50.133:11311 #x1
      #- ROS_IP=192.168.50.133 #x1
    stop_grace_period: 1s
    depends_on:
      ros-core:
        # The healthcheck is required for ros1-bridge to wait until roscore is ready.
        condition: service_healthy
    command: >
      bash -c "export ROS_MASTER_URI=http://localhost:11311 &&
               source /ros2_humble/install/setup.bash &&
               source /ros2_humble/install/ros1_bridge/share/ros1_bridge/local_setup.bash &&
               ros2 run ros1_bridge dynamic_bridge --bridge-all-topics --ros-args --remap __node:=ros_bridge_main"

    stdin_open: true
    tty: true
    network_mode: host
    volumes:
      # Mount local timezone into container. ( Readonly )
      # Reference: https://stackoverflow.com/questions/57607381/how-do-i-change-timezone-in-a-docker-container
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # Direct Rendering Infrastructure
      - /dev/dri:/dev/dri
      # Shared Memory
      - /dev/shm:/dev/shm
      - ~/tdk_peace_and_joy/ros2_ws:/ros2_ws/
    working_dir: /ros2_ws

  ros1:
    image: osrf/ros:noetic-desktop-full
    container_name: wu-ros1
    stdin_open: true
    tty: true
    network_mode: host
    privileged: true
    volumes:
      - ~/tdk_peace_and_joy/catkin_ws:/catkin_ws/
      - /dev/bus/usb:/dev/bus/usb
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
      - /dev/ttyACM1:/dev/ttyACM1
    device_cgroup_rules:
      - "c 166:* rmw"
    working_dir: /catkin_ws
    stop_grace_period: 1s
    depends_on:
      ros-core:
        condition: service_healthy
    command: bash
    # command: /bin/bash -c "
    #         source /opt/ros/noetic/setup.bash && 
    #         source /catkin_ws/devel/setup.bash && 
    #         cd /catkin_ws &&
    #         sudo chmod 777 /dev/ttyACM0 &&
    #         sudo chmod 777 /dev/ttyACM1 &&
    #         roslaunch rosserial_server stm32.launch"
        

  ros2:
    image: osrf/ros:humble-desktop-full
    container_name: wu-ros2
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=23
      - DISPLAY=${DISPLAY}  #linux open
      # - DISPLAY=host.docker.internal:0
      - QT_X11_NO_MITSHM=1
      #- ROS_MASTER_URI=http://192.168.50.133:11311 #x1
      #- ROS_IP=192.168.50.133 #x1
    stdin_open: true
    tty: true
    network_mode: host
    privileged: true
    stop_grace_period: 1s
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw      
      - $HOME/.Xauthority:/root/.Xauthority:rw
      - /dev:/dev
      - ~/tdk_peace_and_joy/ros2_ws:/ros2_ws/
    working_dir: /ros2_ws
    command: bash
    # command: /bin/bash -c "apt update && apt install -y ros-humble-rmw-cyclonedds-cpp && source /opt/ros/humble/setup.bash && bash"

  realsense: 
    build:
      context: .
      target: realsense  
      args:
        USER: realsense
        LIBREALSENSE_VERSION: 2.56.2
    <<: *common-env
    network_mode: host
    image: vision-tdk:realsense
    container_name: tdk-realsense
    volumes:
      - /dev:/dev
      - ~/tdk_peace_and_joy/ros2_ws:/ros2_ws/
    working_dir: /ros2_ws
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=23
    device_cgroup_rules:
      - "c 81:* rmw"
      - "c 189:* rmw"
    command: bash
    # command: /bin/bash -c "
    #   source /opt/ros/humble/setup.bash &&
    #   source /ros2_ws/install/setup.bash &&
    #   ros2 launch realsense2_camera rs_launch.py"